                                                                                                                                                      /*

.---------------------- How To Use -----------------------.
| * Only user_input (array) needs to be manipulated. *    |
|                                                         |
| > Folders (labels) are items in the array.              |
|                                                         |
| > If you want multiple senders in a folder,             |
|   separate email addresses by commas (no extra spacing) |
|   in an item.                                           |
|                                                         |
| > Custom name for folder should be last item in array.  |
|   As of now, there is no support for auto-generated     |
|   labels.                                               |
'---------------------------------------------------------'
                                                                                                                                                      */

var user_input = ["randomemail@gmail.com,anotherrandomemail@gmail.com,LabelOne"];

var given_emails = [];
var labels = [];

//Use this function for your trigger.
function run() {
  synthesize_data();
  make_labels();
  filter();
}

function synthesize_data() {
  for (x=0; x<user_input.length; x++) { // cycles through each item in user list, or each "folder"
    
    var folder = user_input[x].split(",");
    var lastItem = folder.length-1
    var only_emails = "";
    
    if (folder[lastItem].search("@") == -1) { // if user provided label
      labels[x] = folder[lastItem]; //last item in split string (array)
      //Logger.log(labels);
      
      
      
    } else {
      Logger.log("Bad syntax.");
      return "Bad syntax.";
    }
    
    

    folder.pop();
    for (i=0; i<folder.length; i++) {
      if (i != folder.length-1) {
        only_emails = only_emails + folder[i] + ",";
      } else {
        only_emails = only_emails + folder[i];
      }
    }
    
    given_emails[x] = only_emails;
    
  }
  
  Logger.log("Email input: " + given_emails);
  Logger.log("User labels: " + labels);
  
}


// makes a bunch of labels (based on strings in newly created label array)
function make_labels() {
  for (i=0; i<labels.length; i++) {
    GmailApp.createLabel(labels[i]);
  }
}

function filter() {
  //we need to know how many emails are in the inbox... 
  //never mind. if you try to retrieve an email you don't have (3000 etc.), it will return undefined
  
    var all_threads = GmailApp.getInboxThreads();
    var thread;
    var messages;
    var specific_message;
    var sender;
    var email;
    var label;
  
  for (i=0; i<all_threads.length; i++) { // Master Loop here (filter loop), works just like one in synthesize_data()
    
    //combing process
    thread = all_threads[i];
    messages = thread.getMessages();
    
    for (msgCounter=0; msgCounter<messages.length; msgCounter++) {
      specific_message = messages[msgCounter];
    
      sender = specific_message.getFrom();
      email = sender.split("<")[1];
      
      if (email === undefined) {email = sender;} 
      else {email = email.split(">")[0];}
    
    
      //checks given email against all user given emails 
      for (x=0; x<given_emails.length; x++) {

        var emails_in_folder = given_emails[x].split(",");
      
        for (a=0; a<emails_in_folder.length; a++) {
          if (email == emails_in_folder[a]) {
            label = GmailApp.getUserLabelByName(labels[x]);
            label.addToThread(thread);
            thread.moveToArchive();
            break;
          }
        
        }
      
      }
    
    }
  
  }
  
}

